# Makefile.in generated by automake 1.9.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = $(helios_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/helios
pkglibdir = $(libdir)/helios
pkgincludedir = $(includedir)/helios
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = helios$(EXEEXT)
#am__append_1 = -lblitz  -lhdf5_hl -lhdf5 -lz 
#am__append_2 = $(DIR_BLITZ)/lib/liblitz.a   $(DIR_HDF5)/lib/libhdf5_hl.a $(DIR_HDF5)/lib/libhdf5.a  -lz -lgfortran
#-L$(PETSC_DIR)/lib/libpetsc.a
#endif
############################### Set Various FFT Libraries #########

#
# Definitions for the parallel version ...
#
#
#am__append_3 = -lfftw3_threads
#am__append_4 = -lmpiP -lunwind
am__append_5 = -lmpi -lmpi_cxx -lmpi_f90 -lmpi_f77 
am__append_6 = -I/usr/include/mpi 
#am__append_7 = FFT/FFTSolver_p3dfft.cpp
#am__append_8 = $(DIR_P3DFFT)/build/libp3dfft.a 
#am__append_9 = -I$(DIR_P3DFFT)/include \
#	-I/home/b/b30683/fftw-3.3alpha1/include
#am__append_10 = $(DIR_P3DFFT)/build/libp3dfft.a -lgfortran
#am__append_11 = -I$(DIR_FFTW3)/include
#am__append_12 = FFT/FFTSolver_fftw3.cpp FFT/FFTSolver_fftw3_dst.cpp
#am__append_13 = -L$(DIR_FFTW3)/lib -lfftw3
#am__append_14 = -I$(DIR_FFTW3MPI)/include
#am__append_15 = FFT/FFTSolver_fftw3_mpi.cpp
#am__append_16 = -L$(DIR_FFTW3MPI)/lib -lfftw3 -lfftw3_mpi
#am__append_17 = -I$(DIR_FFTW2)/include
#am__append_18 = FFT/FFTSolver_fftw2.cpp
#am__append_19 = -L$(DIR_FFTW2)/lib  -lrfftw -lfftw
am__append_20 = -I$(DIR_FFTW2MPI)/include
am__append_21 = FFT/FFTSolver_fftw2_mpi.cpp
am__append_22 = -L$(DIR_FFTW2MPI)/lib -lrfftw_mpi -lfftw_mpi -lrfftw -lfftw

############################### Set Extra Libraries  Libraries #########
#am__append_23 = FieldsHypre.cpp
#am__append_24 = -I$(DIR_HYPRE)/include  
#am__append_25 = -L$(DIR_HYPRE) /$(DIR_HYPRE)/lib/libHYPRE.a 
#am__append_26 = -I-I$(DIR_FEM)/ \
#	-I$(DIR_FEM)/include/base \
#	-I$(DIR_FEM)/include/enums \
#	-I$(DIR_FEM)/include/error_estimation \
#	-I$(DIR_FEM)/include/fe \
#	-I$(DIR_FEM)/include/systems \
#	-I$(DIR_FEM)/include/geom \
#	-I$(DIR_FEM)/include/mesh \
#	-I$(DIR_FEM)/include/numerics \
#	-I$(DIR_FEM)/include/parallel \
#	-I$(DIR_FEM)/include/partitioning \
#	-I$(DIR_FEM)/include/quadrature \
#	-I$(DIR_FEM)/include/solvers \
#	-I$(DIR_FEM)/include/utils \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/base \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/enums \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/error_estimation \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/fe \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/geom \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/mesh \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/numerics \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/parallel \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/partitioning \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/quadrature \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/solvers \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/systems \
#	-I/home/philscher/Code/libmesh-0.7.0.3/include/utils \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/boost \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/laspack \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/metis/Lib \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/sfcurves \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/gzstream \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/tecplot/include \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/gmv \
#	-I/usr/include/vtk-5.2 \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/tetgen \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/triangle \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/exodusii/Lib/include \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/netcdf/Lib \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/nemesis/Lib \
#	-I/home/philscher/Code/libmesh-0.7.0.3/contrib/libHilbert/include \
#	-I/usr/lib/slepc/include \
#	-I/usr/lib/petsc/include \
#	-I/usr/lib/petsc/bmake/linux-gnu-c-opt \
#	-I/usr/lib/petsc/linux-gnu-c-opt/include \
#	-I/usr/lib/openmpi/include \
#	-I/usr/lib/openmpi/lib -I/usr/include \
#	-I/usr/lib/openmpi/include \
#	-I/usr/lib/openmpi/lib -I/usr/include/spooles \
#	-I/usr/include -I/usr/include/superlu \
#	-I/usr/include/suitesparse -I/usr/include/scotch \
#	-I/usr/lib/openmpi/include \
#	-I/usr/lib/openmpi/lib \
#	-I/home/philscher/Code/hdf5mpi/include/ \
#	-std=c++0x -MT
#am__append_27 = FieldsFEM.cpp FEMSolver.cpp
#am__append_28 = -lz -lgfortran -lmpi -lmpi_cxx -lmpi_f90 -lmpi_f77 /home/philscher/Code/p3dfft//build/libp3dfft.a -lgfortran -lfftw3_mpi -lfftw3 /home/philscher/Code/libmesh-0.7.0.3/lib/x86_64-unknown-linux-gnu_opt/libmesh.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/liblaspack.so   /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libsfcurves.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libgzstream.so -lz /home/philscher/Code/libmesh-0.7.0.3/contrib/tecplot/lib/x86_64-unknown-linux-gnu/tecio.a /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libgmv.so -lvtkIO -lvtkCommon -lvtkFiltering /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libtetgen.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libtriangle.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libexodusii.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libnetcdf.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libnemesis.so /home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libHilbert.so -L/usr/lib/slepc/linux-gnu-c-opt/lib -L/usr/lib/slepc/linux-gnu-c-opt/lib -lslepc -L/usr/lib -lparpack -larpack -L/usr/lib/petsc/linux-gnu-c-opt/lib -L/usr/lib/petsc/linux-gnu-c-opt/lib -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc -lX11 -L/usr/lib -lspooles -lHYPRE -lmpi_cxx -lstdc++ -lsuperlu -lumfpack -lamd -llapack -lblas -L/usr/lib/openmpi/lib  -lmpi -lopen-rte -lopen-pal -lnsl -lutil -lgcc_s -lpthread -lmpi_f90 -lmpi_f77 -lgfortranbegin -lgfortran -lm -lm -L/usr/lib/gcc/x86_64-linux-gnu -lm -lm -ldl -lmpi -lopen-rte -lopen-pal -lnsl -lutil -lgcc_s -lpthread -lmpi_f90 -lmpi_f77 -lgfortranbegin -lgfortran -lm -lm -lm -lm -lscotch -L/usr/lib/openmpi/lib -L/usr/lib/gcc/x86_64-linux-gnu/4.4.0 -L/lib -L/usr/lib/x86_64-linux-gnu  -lmpi -lopen-rte -lopen-pal -lnsl -lutil -lgcc_s -lpthread -lmpi_f90 -lmpi_f77 -lgfortranbegin -lgfortran -lm -lm -L/usr/lib/gcc/x86_64-linux-gnu -lm -lm -lmpi_cxx -lstdc++ -lmpi_cxx -lstdc++  -lmpi -lopen-rte -lopen-pal -lnsl -lutil -lgcc_s -lpthread -L$(DIR_FEM)/lib/x86_64-unknown-linux-gnu_opt -lmesh 
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in compile
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__helios_SOURCES_DIST = main.cpp Helios.cpp FileIO.cpp Fields.cpp \
	FieldsFFT.cpp Setup.cpp Grid.cpp Parallel.cpp Vlasov.cpp \
	Event.cpp Collisions.cpp Fourier3D.cpp Vlasov/Vlasov_Cilk.cpp \
	Analysis.cpp Init.cpp Control.cpp Plasma.cpp LA.cpp Timing.cpp \
	Geometry.cpp TestParticle.cpp FunctionParser/fparser.cc \
	Eigenvalue/Eigenvalue_SLEPc.cpp FFT/FFTSolver_p3dfft.cpp \
	FFT/FFTSolver_fftw3.cpp FFT/FFTSolver_fftw3_dst.cpp \
	FFT/FFTSolver_fftw3_mpi.cpp FFT/FFTSolver_fftw2.cpp \
	FFT/FFTSolver_fftw2_mpi.cpp FieldsHypre.cpp FieldsFEM.cpp \
	FEMSolver.cpp
#am__objects_1 = FFTSolver_p3dfft.$(OBJEXT)
#am__objects_2 = FFTSolver_fftw3.$(OBJEXT) \
#	FFTSolver_fftw3_dst.$(OBJEXT)
#am__objects_3 = FFTSolver_fftw3_mpi.$(OBJEXT)
#am__objects_4 = FFTSolver_fftw2.$(OBJEXT)
am__objects_5 = FFTSolver_fftw2_mpi.$(OBJEXT)
#am__objects_6 = FieldsHypre.$(OBJEXT)
#am__objects_7 = FieldsFEM.$(OBJEXT) FEMSolver.$(OBJEXT)
am_helios_OBJECTS = main.$(OBJEXT) Helios.$(OBJEXT) FileIO.$(OBJEXT) \
	Fields.$(OBJEXT) FieldsFFT.$(OBJEXT) Setup.$(OBJEXT) \
	Grid.$(OBJEXT) Parallel.$(OBJEXT) Vlasov.$(OBJEXT) \
	Event.$(OBJEXT) Collisions.$(OBJEXT) Fourier3D.$(OBJEXT) \
	Vlasov_Cilk.$(OBJEXT) Analysis.$(OBJEXT) Init.$(OBJEXT) \
	Control.$(OBJEXT) Plasma.$(OBJEXT) LA.$(OBJEXT) \
	Timing.$(OBJEXT) Geometry.$(OBJEXT) TestParticle.$(OBJEXT) \
	fparser.$(OBJEXT) Eigenvalue_SLEPc.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7)
helios_OBJECTS = $(am_helios_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(DIR_BLITZ)/lib/liblitz.a \
#	$(DIR_HDF5)/lib/libhdf5_hl.a \
#	$(DIR_HDF5)/lib/libhdf5.a
#am__DEPENDENCIES_3 = $(DIR_P3DFFT)/build/libp3dfft.a
#am__DEPENDENCIES_4 = /$(DIR_HYPRE)/lib/libHYPRE.a
#am__DEPENDENCIES_5 =  \
#	/home/philscher/Code/p3dfft//build/libp3dfft.a \
#	/home/philscher/Code/libmesh-0.7.0.3/lib/x86_64-unknown-linux-gnu_opt/libmesh.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/liblaspack.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libsfcurves.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libgzstream.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/tecplot/lib/x86_64-unknown-linux-gnu/tecio.a \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libgmv.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libtetgen.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libtriangle.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libexodusii.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libnetcdf.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libnemesis.so \
#	/home/philscher/Code/libmesh-0.7.0.3/contrib/lib/x86_64-unknown-linux-gnu_opt/libHilbert.so
helios_DEPENDENCIES = $(DIR_HDF5)/lib/libhdf5_hl.a \
	$(DIR_HDF5)/lib/libhdf5.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(helios_SOURCES)
DIST_SOURCES = $(am__helios_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/b/b30683/helios_ky/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/b/b30683/helios_ky/missing --run tar
AUTOCONF = ${SHELL} /home/b/b30683/helios_ky/missing --run autoconf
AUTOHEADER = ${SHELL} /home/b/b30683/helios_ky/missing --run autoheader
AUTOMAKE = ${SHELL} /home/b/b30683/helios_ky/missing --run automake-1.9
AWK = gawk
CC = mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = mpic++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIR_BLITZ = /home/b/b30683/blitz-intel/
DIR_FEM = 
DIR_FFTW2 = 
DIR_FFTW2MPI = /home/b/b30683//fftw-2.1.5
DIR_FFTW3 = 
DIR_FFTW3MPI = 
DIR_HDF5 = /home/b/b30683/hdf5-mpi
DIR_HYPRE = 
DIR_P3DFFT = 
DIR_PETSC = 
DIR_SLEPC = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
FC = ifort
FCFLAGS = -g
FFTW2MPI_FALSE = #
FFTW2MPI_TRUE = 
FFTW2_FALSE = 
FFTW2_TRUE = #
FFTW3MPI_FALSE = 
FFTW3MPI_TRUE = #
FFTW3_FALSE = 
FFTW3_TRUE = #
HYPRE_FALSE = 
HYPRE_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBMESH_FALSE = 
LIBMESH_TRUE = #
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/b/b30683/helios_ky/missing --run makeinfo
MPIP_FALSE = 
MPIP_TRUE = #
MPI_FALSE = #
MPI_TRUE = 
OBJEXT = o
OPENCL_FALSE = 
OPENCL_TRUE = #
OPENMP_FALSE = 
OPENMP_TRUE = #
P3DFFT_FALSE = 
P3DFFT_TRUE = #
PACKAGE = helios
PACKAGE_BUGREPORT = helios@lx48
PACKAGE_NAME = Helios
PACKAGE_STRING = Helios 1.0.1
PACKAGE_TARNAME = helios
PACKAGE_VERSION = 1.0.1
PATH_SEPARATOR = :
SET_MAKE = 
SHARED_FALSE = 
SHARED_TRUE = #
SHELL = /bin/sh
STATIC_FALSE = 
STATIC_TRUE = #
STRIP = 
VERSION = 1.0.1
WITH_SLEPC_FALSE = 
WITH_SLEPC_TRUE = #
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_FC = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/b/b30683/helios_ky/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown

# but Vlasov.cpp at the end, as compilation time is long for that file
#helios_SOURCES = main.cpp Helios.cpp FileIO.cpp Fields.cpp FieldsFFT.cpp Setup.cpp Grid.cpp Parallel.cpp Vlasov/Vlasov_Fortran.cpp Vlasov.cpp  

#Collisions.cpp Fourier3D.cpp  Vlasov/Vlasov_Blitz.cpp Vlasov/Vlasov_Cilk.cpp Analysis.cpp  Init.cpp Control.cpp 

# compile FFT
helios_SOURCES = main.cpp Helios.cpp FileIO.cpp Fields.cpp \
	FieldsFFT.cpp Setup.cpp Grid.cpp Parallel.cpp Vlasov.cpp \
	Event.cpp Collisions.cpp Fourier3D.cpp Vlasov/Vlasov_Cilk.cpp \
	Analysis.cpp Init.cpp Control.cpp Plasma.cpp LA.cpp Timing.cpp \
	Geometry.cpp TestParticle.cpp FunctionParser/fparser.cc \
	Eigenvalue/Eigenvalue_SLEPc.cpp $(am__append_7) \
	$(am__append_12) $(am__append_15) $(am__append_18) \
	$(am__append_21) $(am__append_23) $(am__append_27)

################# Eigenvalue #######3
#if WITH_SLEPC
AM_CPPFLAGS = -ggdb -O3 -Wall -Wno-unknown-pragmas -fopenmp\
	-I$(DIR_HDF5)/include/ -I$(DIR_BLITZ) -I./FFT -I./Geometry \
	-I$(PETSC_DIR)/include -I$(SLEPC_DIR)/include $(am__append_6) \
	$(am__append_9) $(am__append_11) $(am__append_14) \
	$(am__append_17) $(am__append_20) $(am__append_24) \
	$(am__append_26) 
helios_LDFLAGS = -L$(DIR_HDF5)/lib/ -L$(DIR_BLITZ)/lib $(am__append_8)
helios_LDADD = -lblitz $(DIR_HDF5)/lib/libhdf5_hl.a -liomp5\
	$(DIR_HDF5)/lib/libhdf5.a -lz $(am__append_1) $(am__append_2) \
	-L$(SLEPC_DIR)/lib -lslepc -L$(PETSC_DIR)/lib -lpetsc \
	$(am__append_3) -liomp5 $(am__append_4) $(am__append_5) \
	$(am__append_10) $(am__append_13) $(am__append_16) \
	$(am__append_19) $(am__append_22) $(am__append_25) \
	$(am__append_28)

#EXTRA_DIST =  Helios.h FileIO.h Vlasov/Vlasov_Fortran.h Vlasov/Vlasov_Blitz.h Vlasov.h Fields.h FieldsFFT.h FieldsFEM.h Setup.h Grid.h Parallel.h Init.h 
EXTRA_DIST = Helios.h FileIO.h Vlasov/Vlasov_Blitz.h Vlasov/Vlasov_Cilk.h Vlasov.h Fields.h FieldsFFT.h FieldsFEM.h Setup.h Grid.h Parallel.h Init.h \
			  Global.h Setup.h Analysis.h  Collisions.h Geometry  FFTSolver.h FEMSolver.h Fourier3D.h FunctionParser \
			  helios.doxygen  Plasma.h FFT/ Timing.h Integration.h GaussWeights.h FieldsHypre.h Control.h Geometry.h Benchmark.h FileAttr.h \
			  FileAttr.h TimeIntegration.h Visualization.h LA.h


#if STATIC
#helios_LDADD += $(DIR_FFTW)/fftw3_mpi.a
#endif

#if SHARED
#helios_LDADD +=   -lfftw3_mpi 
#endif

#helios_LDADD += -lfftw3 
AM_F90FLAGS = -I.. -I. -O3 
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
helios$(EXEEXT): $(helios_OBJECTS) $(helios_DEPENDENCIES) 
	@rm -f helios$(EXEEXT)
	$(CXXLINK) $(helios_LDFLAGS) $(helios_OBJECTS) $(helios_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Analysis.Po
include ./$(DEPDIR)/Collisions.Po
include ./$(DEPDIR)/Control.Po
include ./$(DEPDIR)/Eigenvalue_SLEPc.Po
include ./$(DEPDIR)/Event.Po
include ./$(DEPDIR)/FEMSolver.Po
include ./$(DEPDIR)/FFTSolver_fftw2.Po
include ./$(DEPDIR)/FFTSolver_fftw2_mpi.Po
include ./$(DEPDIR)/FFTSolver_fftw3.Po
include ./$(DEPDIR)/FFTSolver_fftw3_dst.Po
include ./$(DEPDIR)/FFTSolver_fftw3_mpi.Po
include ./$(DEPDIR)/FFTSolver_p3dfft.Po
include ./$(DEPDIR)/Fields.Po
include ./$(DEPDIR)/FieldsFEM.Po
include ./$(DEPDIR)/FieldsFFT.Po
include ./$(DEPDIR)/FieldsHypre.Po
include ./$(DEPDIR)/FileIO.Po
include ./$(DEPDIR)/Fourier3D.Po
include ./$(DEPDIR)/Geometry.Po
include ./$(DEPDIR)/Grid.Po
include ./$(DEPDIR)/Helios.Po
include ./$(DEPDIR)/Init.Po
include ./$(DEPDIR)/LA.Po
include ./$(DEPDIR)/Parallel.Po
include ./$(DEPDIR)/Plasma.Po
include ./$(DEPDIR)/Setup.Po
include ./$(DEPDIR)/TestParticle.Po
include ./$(DEPDIR)/Timing.Po
include ./$(DEPDIR)/Vlasov.Po
include ./$(DEPDIR)/Vlasov_Cilk.Po
include ./$(DEPDIR)/fparser.Po
include ./$(DEPDIR)/main.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Vlasov_Cilk.o: Vlasov/Vlasov_Cilk.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vlasov_Cilk.o -MD -MP -MF "$(DEPDIR)/Vlasov_Cilk.Tpo" -c -o Vlasov_Cilk.o `test -f 'Vlasov/Vlasov_Cilk.cpp' || echo '$(srcdir)/'`Vlasov/Vlasov_Cilk.cpp; \
	then mv -f "$(DEPDIR)/Vlasov_Cilk.Tpo" "$(DEPDIR)/Vlasov_Cilk.Po"; else rm -f "$(DEPDIR)/Vlasov_Cilk.Tpo"; exit 1; fi
#	source='Vlasov/Vlasov_Cilk.cpp' object='Vlasov_Cilk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vlasov_Cilk.o `test -f 'Vlasov/Vlasov_Cilk.cpp' || echo '$(srcdir)/'`Vlasov/Vlasov_Cilk.cpp

Vlasov_Cilk.obj: Vlasov/Vlasov_Cilk.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vlasov_Cilk.obj -MD -MP -MF "$(DEPDIR)/Vlasov_Cilk.Tpo" -c -o Vlasov_Cilk.obj `if test -f 'Vlasov/Vlasov_Cilk.cpp'; then $(CYGPATH_W) 'Vlasov/Vlasov_Cilk.cpp'; else $(CYGPATH_W) '$(srcdir)/Vlasov/Vlasov_Cilk.cpp'; fi`; \
	then mv -f "$(DEPDIR)/Vlasov_Cilk.Tpo" "$(DEPDIR)/Vlasov_Cilk.Po"; else rm -f "$(DEPDIR)/Vlasov_Cilk.Tpo"; exit 1; fi
#	source='Vlasov/Vlasov_Cilk.cpp' object='Vlasov_Cilk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vlasov_Cilk.obj `if test -f 'Vlasov/Vlasov_Cilk.cpp'; then $(CYGPATH_W) 'Vlasov/Vlasov_Cilk.cpp'; else $(CYGPATH_W) '$(srcdir)/Vlasov/Vlasov_Cilk.cpp'; fi`

fparser.o: FunctionParser/fparser.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fparser.o -MD -MP -MF "$(DEPDIR)/fparser.Tpo" -c -o fparser.o `test -f 'FunctionParser/fparser.cc' || echo '$(srcdir)/'`FunctionParser/fparser.cc; \
	then mv -f "$(DEPDIR)/fparser.Tpo" "$(DEPDIR)/fparser.Po"; else rm -f "$(DEPDIR)/fparser.Tpo"; exit 1; fi
#	source='FunctionParser/fparser.cc' object='fparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fparser.o `test -f 'FunctionParser/fparser.cc' || echo '$(srcdir)/'`FunctionParser/fparser.cc

fparser.obj: FunctionParser/fparser.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fparser.obj -MD -MP -MF "$(DEPDIR)/fparser.Tpo" -c -o fparser.obj `if test -f 'FunctionParser/fparser.cc'; then $(CYGPATH_W) 'FunctionParser/fparser.cc'; else $(CYGPATH_W) '$(srcdir)/FunctionParser/fparser.cc'; fi`; \
	then mv -f "$(DEPDIR)/fparser.Tpo" "$(DEPDIR)/fparser.Po"; else rm -f "$(DEPDIR)/fparser.Tpo"; exit 1; fi
#	source='FunctionParser/fparser.cc' object='fparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fparser.obj `if test -f 'FunctionParser/fparser.cc'; then $(CYGPATH_W) 'FunctionParser/fparser.cc'; else $(CYGPATH_W) '$(srcdir)/FunctionParser/fparser.cc'; fi`

Eigenvalue_SLEPc.o: Eigenvalue/Eigenvalue_SLEPc.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Eigenvalue_SLEPc.o -MD -MP -MF "$(DEPDIR)/Eigenvalue_SLEPc.Tpo" -c -o Eigenvalue_SLEPc.o `test -f 'Eigenvalue/Eigenvalue_SLEPc.cpp' || echo '$(srcdir)/'`Eigenvalue/Eigenvalue_SLEPc.cpp; \
	then mv -f "$(DEPDIR)/Eigenvalue_SLEPc.Tpo" "$(DEPDIR)/Eigenvalue_SLEPc.Po"; else rm -f "$(DEPDIR)/Eigenvalue_SLEPc.Tpo"; exit 1; fi
#	source='Eigenvalue/Eigenvalue_SLEPc.cpp' object='Eigenvalue_SLEPc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Eigenvalue_SLEPc.o `test -f 'Eigenvalue/Eigenvalue_SLEPc.cpp' || echo '$(srcdir)/'`Eigenvalue/Eigenvalue_SLEPc.cpp

Eigenvalue_SLEPc.obj: Eigenvalue/Eigenvalue_SLEPc.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Eigenvalue_SLEPc.obj -MD -MP -MF "$(DEPDIR)/Eigenvalue_SLEPc.Tpo" -c -o Eigenvalue_SLEPc.obj `if test -f 'Eigenvalue/Eigenvalue_SLEPc.cpp'; then $(CYGPATH_W) 'Eigenvalue/Eigenvalue_SLEPc.cpp'; else $(CYGPATH_W) '$(srcdir)/Eigenvalue/Eigenvalue_SLEPc.cpp'; fi`; \
	then mv -f "$(DEPDIR)/Eigenvalue_SLEPc.Tpo" "$(DEPDIR)/Eigenvalue_SLEPc.Po"; else rm -f "$(DEPDIR)/Eigenvalue_SLEPc.Tpo"; exit 1; fi
#	source='Eigenvalue/Eigenvalue_SLEPc.cpp' object='Eigenvalue_SLEPc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Eigenvalue_SLEPc.obj `if test -f 'Eigenvalue/Eigenvalue_SLEPc.cpp'; then $(CYGPATH_W) 'Eigenvalue/Eigenvalue_SLEPc.cpp'; else $(CYGPATH_W) '$(srcdir)/Eigenvalue/Eigenvalue_SLEPc.cpp'; fi`

FFTSolver_p3dfft.o: FFT/FFTSolver_p3dfft.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_p3dfft.o -MD -MP -MF "$(DEPDIR)/FFTSolver_p3dfft.Tpo" -c -o FFTSolver_p3dfft.o `test -f 'FFT/FFTSolver_p3dfft.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_p3dfft.cpp; \
	then mv -f "$(DEPDIR)/FFTSolver_p3dfft.Tpo" "$(DEPDIR)/FFTSolver_p3dfft.Po"; else rm -f "$(DEPDIR)/FFTSolver_p3dfft.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_p3dfft.cpp' object='FFTSolver_p3dfft.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_p3dfft.o `test -f 'FFT/FFTSolver_p3dfft.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_p3dfft.cpp

FFTSolver_p3dfft.obj: FFT/FFTSolver_p3dfft.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_p3dfft.obj -MD -MP -MF "$(DEPDIR)/FFTSolver_p3dfft.Tpo" -c -o FFTSolver_p3dfft.obj `if test -f 'FFT/FFTSolver_p3dfft.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_p3dfft.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_p3dfft.cpp'; fi`; \
	then mv -f "$(DEPDIR)/FFTSolver_p3dfft.Tpo" "$(DEPDIR)/FFTSolver_p3dfft.Po"; else rm -f "$(DEPDIR)/FFTSolver_p3dfft.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_p3dfft.cpp' object='FFTSolver_p3dfft.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_p3dfft.obj `if test -f 'FFT/FFTSolver_p3dfft.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_p3dfft.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_p3dfft.cpp'; fi`

FFTSolver_fftw3.o: FFT/FFTSolver_fftw3.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw3.o -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw3.Tpo" -c -o FFTSolver_fftw3.o `test -f 'FFT/FFTSolver_fftw3.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw3.cpp; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw3.Tpo" "$(DEPDIR)/FFTSolver_fftw3.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw3.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw3.cpp' object='FFTSolver_fftw3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw3.o `test -f 'FFT/FFTSolver_fftw3.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw3.cpp

FFTSolver_fftw3.obj: FFT/FFTSolver_fftw3.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw3.obj -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw3.Tpo" -c -o FFTSolver_fftw3.obj `if test -f 'FFT/FFTSolver_fftw3.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw3.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw3.cpp'; fi`; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw3.Tpo" "$(DEPDIR)/FFTSolver_fftw3.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw3.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw3.cpp' object='FFTSolver_fftw3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw3.obj `if test -f 'FFT/FFTSolver_fftw3.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw3.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw3.cpp'; fi`

FFTSolver_fftw3_dst.o: FFT/FFTSolver_fftw3_dst.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw3_dst.o -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw3_dst.Tpo" -c -o FFTSolver_fftw3_dst.o `test -f 'FFT/FFTSolver_fftw3_dst.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw3_dst.cpp; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw3_dst.Tpo" "$(DEPDIR)/FFTSolver_fftw3_dst.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw3_dst.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw3_dst.cpp' object='FFTSolver_fftw3_dst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw3_dst.o `test -f 'FFT/FFTSolver_fftw3_dst.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw3_dst.cpp

FFTSolver_fftw3_dst.obj: FFT/FFTSolver_fftw3_dst.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw3_dst.obj -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw3_dst.Tpo" -c -o FFTSolver_fftw3_dst.obj `if test -f 'FFT/FFTSolver_fftw3_dst.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw3_dst.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw3_dst.cpp'; fi`; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw3_dst.Tpo" "$(DEPDIR)/FFTSolver_fftw3_dst.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw3_dst.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw3_dst.cpp' object='FFTSolver_fftw3_dst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw3_dst.obj `if test -f 'FFT/FFTSolver_fftw3_dst.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw3_dst.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw3_dst.cpp'; fi`

FFTSolver_fftw3_mpi.o: FFT/FFTSolver_fftw3_mpi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw3_mpi.o -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw3_mpi.Tpo" -c -o FFTSolver_fftw3_mpi.o `test -f 'FFT/FFTSolver_fftw3_mpi.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw3_mpi.cpp; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw3_mpi.Tpo" "$(DEPDIR)/FFTSolver_fftw3_mpi.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw3_mpi.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw3_mpi.cpp' object='FFTSolver_fftw3_mpi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw3_mpi.o `test -f 'FFT/FFTSolver_fftw3_mpi.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw3_mpi.cpp

FFTSolver_fftw3_mpi.obj: FFT/FFTSolver_fftw3_mpi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw3_mpi.obj -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw3_mpi.Tpo" -c -o FFTSolver_fftw3_mpi.obj `if test -f 'FFT/FFTSolver_fftw3_mpi.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw3_mpi.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw3_mpi.cpp'; fi`; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw3_mpi.Tpo" "$(DEPDIR)/FFTSolver_fftw3_mpi.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw3_mpi.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw3_mpi.cpp' object='FFTSolver_fftw3_mpi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw3_mpi.obj `if test -f 'FFT/FFTSolver_fftw3_mpi.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw3_mpi.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw3_mpi.cpp'; fi`

FFTSolver_fftw2.o: FFT/FFTSolver_fftw2.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw2.o -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw2.Tpo" -c -o FFTSolver_fftw2.o `test -f 'FFT/FFTSolver_fftw2.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw2.cpp; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw2.Tpo" "$(DEPDIR)/FFTSolver_fftw2.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw2.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw2.cpp' object='FFTSolver_fftw2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw2.o `test -f 'FFT/FFTSolver_fftw2.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw2.cpp

FFTSolver_fftw2.obj: FFT/FFTSolver_fftw2.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw2.obj -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw2.Tpo" -c -o FFTSolver_fftw2.obj `if test -f 'FFT/FFTSolver_fftw2.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw2.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw2.cpp'; fi`; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw2.Tpo" "$(DEPDIR)/FFTSolver_fftw2.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw2.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw2.cpp' object='FFTSolver_fftw2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw2.obj `if test -f 'FFT/FFTSolver_fftw2.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw2.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw2.cpp'; fi`

FFTSolver_fftw2_mpi.o: FFT/FFTSolver_fftw2_mpi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw2_mpi.o -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw2_mpi.Tpo" -c -o FFTSolver_fftw2_mpi.o `test -f 'FFT/FFTSolver_fftw2_mpi.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw2_mpi.cpp; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw2_mpi.Tpo" "$(DEPDIR)/FFTSolver_fftw2_mpi.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw2_mpi.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw2_mpi.cpp' object='FFTSolver_fftw2_mpi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw2_mpi.o `test -f 'FFT/FFTSolver_fftw2_mpi.cpp' || echo '$(srcdir)/'`FFT/FFTSolver_fftw2_mpi.cpp

FFTSolver_fftw2_mpi.obj: FFT/FFTSolver_fftw2_mpi.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FFTSolver_fftw2_mpi.obj -MD -MP -MF "$(DEPDIR)/FFTSolver_fftw2_mpi.Tpo" -c -o FFTSolver_fftw2_mpi.obj `if test -f 'FFT/FFTSolver_fftw2_mpi.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw2_mpi.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw2_mpi.cpp'; fi`; \
	then mv -f "$(DEPDIR)/FFTSolver_fftw2_mpi.Tpo" "$(DEPDIR)/FFTSolver_fftw2_mpi.Po"; else rm -f "$(DEPDIR)/FFTSolver_fftw2_mpi.Tpo"; exit 1; fi
#	source='FFT/FFTSolver_fftw2_mpi.cpp' object='FFTSolver_fftw2_mpi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FFTSolver_fftw2_mpi.obj `if test -f 'FFT/FFTSolver_fftw2_mpi.cpp'; then $(CYGPATH_W) 'FFT/FFTSolver_fftw2_mpi.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT/FFTSolver_fftw2_mpi.cpp'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/Vlasov
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

#include $(DIR_FEM)/Make.common
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
