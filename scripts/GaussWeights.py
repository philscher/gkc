"""
*       Filename:  GaussWeights.h
 *    Description:  This file is autogenerated by scripts/GaussWeights.py
 *         Author:  Paul P. Hilscher (2010) 
"""

#ifndef __GAUSSWEIGHTS_H_

from pylab import *
from scipy.special.orthogonal import *

maxN = 64
# Create GaussWeights.h

# Add header

gw_h = \

"""
/*
 * =====================================================================================
 *
 *       Filename:  GaussWeights.h
 *
 *    Description:  This file is autogenerated by scripts/GaussWeights.py
 *
 *         Author:  Paul P. Hilscher (2010) 
 *   
 * =====================================================================================
 */


#ifndef __GAUSSWEIGHTS_H_

/* Merge all together */
// using from GSL glfixed
struct GaussWeights 
{
    int     n;
    double *points;
    double *weights;
};

"""



for n in arange(1,maxN+1,1):
    GLpoints = p_roots(n)

    gw_h += "static double x" + str(n) + "[" + str(n) + "] = {";
    for p in GLpoints[0]: gw_h += str(p) + ","
    gw_h = gw_h[:-2] + "};" + '\n'
    
    
    gw_h += "static double w" + str(n) + "[" + str(n) + "] = {";
    for p in GLpoints[1]: gw_h += str(p) + ","
    gw_h = gw_h[:-2] + "};" + '\n' + '\n'
    

gw_h += \
"""
static GaussWeights gauss_weights[] =
{

"""
  
for n in range(maxN):
    gw_h +=  "{   " + str(n) + ",     x" + str(n+1) + ",    w" + str(n+1) + "}," + '\n'


gw_h = gw_h[:-2] + '\n' + "};" + '\n'

gw_h += "#define GAUSS_WEIGHTS_MAX " + str(maxN) + '\n'
gw_h += "#endif //__GAUSSWEIGHTS_H_" + '\n'

print gw_h







